type RootSession = Client ?? RootRequest(String) . (Client ! TLDResponse(Pid(ZoneSession)) . ##Client) +
                                                   (Client ! InvalidTLD(String) . ##Client)
type ZoneSession = Client ?? ResolutionRequest(String) . (Client ! PartialResolution(Pid(ZoneSession)) . ##Client) + 
                                                         (Client ! InvalidDomain(String) . ##Client) +
                                                         (Client ! ResolutionComplete(String) . ##Client)
type ClientSession = Root !! RootRequest(String) . (Root ? InvalidTLD(String) . #Root . end) +
                        (Root ? TLDResponse(Pid(ZoneSession)) . #Root . ZS !! ResolutionRequest(String) . rec lookup . (ZS ?? PartialResolution(Pid(ZoneSession)) . #ZS . lookup) +
                                                    (ZS ?? InvalidDomain(String) . #ZS . end) +
                                                    (ZS ?? ResolutionComplete(String) . #ZS . end))

actor Client follows (ClientSession) {
  let rootServer <= discover RootSession in
  connect RootRequest("uk") to rootServer as Root;
  receive from Root {
    TLDResponse(zoneServerAddr) ->
      wait Root;
      connect ResolutionRequest("wwwglaacuk") to zoneServerAddr as ZS;
      lookup ::
        receive from ZS {
          PartialResolution(pidZS) ->
            wait ZS;
            connect ResolutionRequest("wwwglaacuk") to pidZS as ZS; 
            continue lookup
          InvalidDomain(string) ->
            wait ZoneServer
          ResolutionComplete(ipAddress) ->
            wait ZoneServer
        }
    InvalidTLD(string) ->
      wait Root
  }
}

actor RootServer follows (RootSession) {
  accept from Client {
    RootRequest(ext) ->
      if (ext == "uk") {
        let zoneServerAddr <= discover ZoneServer in
        send TLDResponse(zoneServerAddr) to Client;
        disconnect from Client
      }
      else {
        send InvalidTLD("Invalid") to Client;
        disconnect from Client
      }
  }
}

actor ZoneServer1 follows (ZoneSession) {
  accept from Client {
    ResolutionRequest(domainName) ->
      if (domainName == "wwwglaacuk") {
        send ResolutionComplete("a1111") to Client;
        disconnect from Client
      }
      else {
        send InvalidDomain("Invalid") to Client;
        disconnect from Client
      }
  }
}

Root : RootSession
ZS : ZoneSession
Client : ClientSession

boot {
 new Client
}